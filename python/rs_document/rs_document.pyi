from typing_extensions import Self

def clean_and_split_docs(docs: list[Document], chunk_size: int) -> list[Document]: ...

class Document:
    page_content: str
    metadata: dict[str, str]
    def __init__(self: Self, page_content: str, metadata: dict[str, str]) -> None: ...
    def clean_non_ascii_chars(self: Self) -> None: ...
    def clean_bullets(self: Self) -> None: ...
    def clean_ligatures(self: Self) -> None: ...
    def clean_extra_whitespace(self: Self) -> None: ...
    def group_broken_paragraphs(self: Self) -> None: ...
    def new_line_grouper(self: Self) -> None: ...
    def auto_paragraph_grouper(self: Self) -> None: ...
    def clean(self: Self) -> None: ...
    def recursive_character_splitter(self: Self, chunk_size: int) -> list[Document]: ...
    def split_on_num_characters(self: Self, num_characters: int) -> list[Document]: ...
